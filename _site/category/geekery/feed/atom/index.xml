<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">Random Thoughts and Geekery</title>
  <subtitle type="text">The musings and ramblings of Ant Zucaro</subtitle>

  <updated>2011-02-22T14:21:40Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://www.antzucaro.com" />
  <id>http://www.antzucaro.com/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://www.antzucaro.com/feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://www.antzucaro.com</uri>
    </author>
    <title type="html"><![CDATA[Last.fm and MOC]]></title>
    <link rel="alternate" type="text/html" href="http://www.antzucaro.com/2011/02/last-fm-and-moc/" />
    <id>http://www.antzucaro.com/2011/02/last-fm-and-moc/</id>
    <updated>2011-02-02T20:55:07Z</updated>
    <published>2011-02-02T20:55:07Z</published>
    <category scheme="http://www.antzucaro.com" term="blog" />
    <category scheme="http://www.antzucaro.com" term="geekery" />
    <summary type="html"><![CDATA[Last.fm and MOC]]></summary>
    <content type="html" xml:base="http://www.antzucaro.com/2011/02/last-fm-and-moc/"><![CDATA[<p>I'm a big fan of <a href="http://www.last.fm">Last.fm</a>. For those not aware, it is a music recommendation service. It does its recommendations based on your own listening patterns; it watches the tracks you play on your computer and compares it to those played by other people sharing common artists. As an example, Last.fm recommends that I check out the band Catch 22 (who I do not have in my music library) based on the number of times I've played songs by Less Than Jake and because other people who have listened to Less Than Jake listen to Catch 22. Pretty cool.</p>
<p>One thing that is critical to the entire Last.fm experience is the connection between the music player you use and the Last.fm servers that make the recommendations. If you don't have that connection, you won't get any recommendations! Forming the bridge between the two is something called a <em>scrobbler; </em>the scrobbler is the piece of software that watches what you're playing on your music player and sends that information over to the recommendation servers. Last.fm provides a scrobbler client for both Windows and Mac as a free download. Although not officially supported, Linux users can still participate with plugins for many popular players (Amarok, Rhythmbox, Audacious).</p>
<p>Even Linux music players without ready-made plugins can use the service through a software package called <a href="http://www.red-bean.com/decklin/lastfmsubmitd/">lastfmsubmitd</a>. This software package sets up a generic way for players to send data over to Last.fm via the standard client/server model familiar to most Linux users. Here's how I set it up with MOC, a popular command-line music player.
<h3>Get the lastfmsubmitd package</h3>
I run Ubuntu on my home theater PC, which is where I play most of my music at home. To install lastfmsubmitd there I ran the following:</p>
<pre class="brush:bash;">ï»¿sudo apt-get install lastfmsubmitd</pre>

<p>During the installation you'll be asked several straightforward questions (username, password), after which you'll be left with a running lastfmsubmitd daemon. Check to make sure it is up and running with:</p>
<pre class="brush:bash;">ps -ef | grep lastfmsubmit[d]</pre>

<p>You should see a process running under that name. If not, the following should get you up and running:</p>
<pre class="brush:bash;">sudo /etc/init.d/lastfmsubmitd start</pre>

<p>The next step is hooking up your player to submit information to lastfmsubmitd.
<h3>Change your MOC configuration</h3>
MOC is my music player of choice, and unfortunately it is one that doesn't have a prebuilt plugin for Last.fm. Instead I have to add the following in my ~/.moc/config file to make MOC submit the songs I play to lastfmsubmitd:</p>
<pre class="brush:bash;">OnSongChange = &quot;/usr/lib/lastfmsubmitd/lastfmsubmit --artist %a --title %t --length %d --album %r&quot;</pre>

<p>What this does is submit each song to lastfmsubmitd when you start playing it. lastfmsubmitd then submits the song data to the actual Last.fm servers using its own built in submission client (that's the /usr/lib/lastfmsubmitd/lastfmsubmit part). Take note that this method sends data <em>right when the song changes</em>. If you are a habitual song-changer and don't feel like spamming Last.fm with songs that you really haven't listened to fully, check out Luke Plant's submission script <a href="http://lukeplant.me.uk/blog/posts/moc-and-last-fm/">here</a>, as it may suit you better. I rarely skip around in songs, so I just stick with the default submission client (the one in the OnSongChange config above) .
<h3>Restart and Verify!</h3>
You have to completely restart MOC before the configuration option goes into effect. Take care to kill the process if it is still running after you've exited to the terminal, as MOC is a server process. Once you've verified that the process is gone, fire up 'mocp' again and play a song or two. Check your Last.fm profile page shortly after you start the song. If you see it showing up in the list, you're in business!</p>
<div class="wp-caption aligncenter" style="width: 630px"><a href="http://media.antzucaro.com/uploads/2011/02/verified.png"><img class="size-full wp-image-650" title="Verified!" src="http://media.antzucaro.com/uploads/2011/02/verified.png" alt="Verified!" width="630" height="435" /></a><p class="wp-caption-text">Verified!</p></div>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.antzucaro.com</uri>
    </author>
    <title type="html"><![CDATA[Planning ahead for MySQL partitioning]]></title>
    <link rel="alternate" type="text/html" href="http://www.antzucaro.com/2011/01/planning-ahead-for-mysql-partitioning/" />
    <id>http://www.antzucaro.com/2011/01/planning-ahead-for-mysql-partitioning/</id>
    <updated>2011-01-30T17:05:11Z</updated>
    <published>2011-01-30T17:05:11Z</published>
    <category scheme="http://www.antzucaro.com" term="blog" />
    <category scheme="http://www.antzucaro.com" term="geekery" />
    <summary type="html"><![CDATA[Planning ahead for MySQL partitioning]]></summary>
    <content type="html" xml:base="http://www.antzucaro.com/2011/01/planning-ahead-for-mysql-partitioning/"><![CDATA[
<h3>The Scenario</h3>
Let's suppose you are modeling a database in MySQL 5.5. Based on your knowledge of the requirements for the application <em>behind </em>this database you can guess which of the tables within it are going to be huge. For those huge tables you want to plan ahead to make sure that you can scale out your data such that you have less headaches in the future. Here's the catch: you want to keep it simple until it comes time to scale out. That sounds like an honorable goal, right? Now how exactly do we do that...hmm. This post is how I would approach this problem. I hope you can gain something from it. I certainly learned some things in trying to get this stuff to work!

To ground this problem scenario into something concrete let's assume that we're modeling a simple relationship - players and games in a multiplayer game. Here's the model that we're after:

<div class="wp-caption aligncenter" style="width: 559px"><span style="font-size: x-small;"><a href="http://media.antzucaro.com/uploads/2011/01/normal_relationship.png"><img class="size-full wp-image-613" title="Multiplayer game ER diagram" src="http://media.antzucaro.com/uploads/2011/01/normal_relationship.png" alt="Multiplayer game ER diagram" width="559" height="149" /></a></span><p class="wp-caption-text">Multiplayer game ER diagram</p></div>

Here is the DDL to create this model:

<pre class="brush:sql;">
CREATE  TABLE IF NOT EXISTS `parttest`.`player` (
`player_id` INT NOT NULL ,
`name` VARCHAR(30) NULL ,
PRIMARY KEY (`player_id`) )
ENGINE = InnoDB;

CREATE  TABLE IF NOT EXISTS `parttest`.`game` (
`game_id` INT NOT NULL ,
`duration` TIME NULL ,
`start_dt` TIMESTAMP NOT NULL ,
PRIMARY KEY (`game_id`) )
ENGINE = InnoDB;

CREATE  TABLE IF NOT EXISTS `parttest`.`player_game` (
`player_id` INT NOT NULL ,
`game_id` INT NOT NULL ,
`create_dt` TIMESTAMP NOT NULL ,
PRIMARY KEY (`player_id`, `game_id`) ,
INDEX `player_game_fk01` (`player_id` ASC) ,
INDEX `player_game_fk02` (`game_id` ASC) ,
CONSTRAINT `player_game_fk01`
FOREIGN KEY (`player_id` )
REFERENCES `parttest`.`player` (`player_id` )
ON DELETE NO ACTION
ON UPDATE NO ACTION,
CONSTRAINT `player_game_fk02`
FOREIGN KEY (`game_id` )
REFERENCES `parttest`.`game` (`game_id` )
ON DELETE NO ACTION
ON UPDATE NO ACTION)
ENGINE = InnoDB;
</pre>

In this model we have players and games. Many players can participate in a single game and many games can be played by a single player, thus the two tables "player" and "game" have a many-to-many relationship. To represent that in the database we have an associative table ("player_game") between the two. Also included in two of the tables are columns that track when something happened.

For the sake of this example let's assume that there won't be too many players, but those limited amount of players will play the game feverishly (it's an addictive open source game with a small community). That means that the "game" table and the associative "player_game" table will be pretty large as time goes by - those are the two tables that we'll want to make scalable for the future. We'll want the option to easily <em>partition </em>them at some point down the line.
<h3>Enter Partitioning</h3>
Wait, wait, wait. <em>Partitioning</em>? What the heck is that for? I won't bore you with too many details (you can find out more <a href="http://en.wikipedia.org/wiki/Partition_(database)">here</a> and <a href="http://dev.mysql.com/doc/refman/5.5/en/partitioning.html">here</a>), so let's just say that partitioning is a way to split up your database tables in to smaller pieces so that operations upon them can be faster (in most situations that is the goal, at least). Partitions provide the following benefits (this is some, not all):
<ul>
	<li>Maintenance â€“ when you split up 	tables into partitions you can often do maintenance on them such 	that you only affect a small amount of your users at a time. Having 	partitions also allows you to easily implement a pruning or 	archiving strategies depending on how you split the data. If you 	split up your tables based upon create timestamp, for example, you 	can easily drop or move older data (the ones that aren't queried as 	often as the newer ones) via a singleo command.</li>
	<li>Query performance â€“ running 	queries against large datasets most often causes problems. When the 	data is partitioned the database can â€œautomagicallyâ€ determine 	which partitions aren't involved in queries; it can tell which 	partitions aren't involved in the WHERE clause of your SQL 	statements, thus it doesn't need to scan them. That means you 	traverse less data to get the information your query needs, which in 	turn equals faster performance! Of course this only applies if the 	WHERE clause of the queries in question can avoid partitions. If you 	are grabbing everything from a table partitioning obviously won't 	help you.</li>
	<li>Availability â€“ partitions can be 	split onto different physical media, which means your table is still 	partially available even if one of those media sources goes down. 	This also has impacts with respect to maintenance (see above).</li>
</ul>
<h3>Implemention (some hurdles to jump)</h3>
Back to the example. Since we know that the â€œgameâ€ and â€œplayer_gameâ€ tables are going to be big, let's see how to set ourselves up for easy partitioning in the future. The goal here is to get to a partitioned table with a minimum number of ALTER TABLE statements. Ideally we'd have only one ALTER TABLE â€“ to add partitioning! Let's project ourselves into the future to the point in time when our data is so large that we are forced to consider partitioning. Fortunately for us our tables have no data in them, which makes our tests quick and relatively painless.

Given the initial DDL, the first step would be to try the obvious: alter the table to add partitioning! Let's give that a try:

<pre class="brush:sql;">ALTER TABLE game

PARTITION BY RANGE(unix_timestamp(start_dt)) (

PARTITION part0 VALUES LESS THAN (unix_timestamp('2011-01-01 00:00:00')),

PARTITION part1 VALUES LESS THAN (unix_timestamp('2011-01-02 00:00:00')),

PARTITION part2 VALUES LESS THAN (unix_timestamp('2011-01-03 00:00:00')),

PARTITION part3 VALUES LESS THAN (unix_timestamp('2011-01-04 00:00:00')),

PARTITION part4 VALUES LESS THAN (unix_timestamp('2011-01-05 00:00:00')));

</pre>

Okay, that failed with the following. Bummer:

[code]ERROR 1217 (23000): Cannot delete or update a parent row: a foreign key constraint fails[/code]

The only table in our model with foreign keys is â€œplayer_game,â€ so let's remove those constraints to move forward. Let's do that:

<pre class="brush:sql;">alter table player_game drop foreign key player_game_fk01;
alter table player_game drop foreign key player_game_fk02;</pre>

We can now try to partition again. We run the same alter as before and get the following:

[code]ERROR 1503 (HY000): A PRIMARY KEY must include all columns in the table's partitioning function[/code]

Argh! What in the world does this mean? Looking up this error leads us to <a href="http://dev.mysql.com/doc/refman/5.5/en/partitioning-limitations-partitioning-keys-unique-keys.html">this entry</a> in the manual which tells us why. In short: you can't partition a table using a column that is not included in the primary key for that table. Since the â€œstart_dtâ€ column isn't in our primary key, we couldn't proceed with our alter. Okay, so let's add it:

<pre class="brush:sql;">ALTER TABLE game DROP PRIMARY KEY;

ALTER TABLE game ADD PRIMARY KEY (game_id, start_dt);</pre>

Once more with the alter to partition, as before. Cross your fingers...

[code]Query OK, 0 rows affected (0.05 sec)[/code]

Success! Now all we need to do is the same ALTERs to the player_game table (using the same process we just did) and add back those foreign keys that we dropped earlier. We'll then have our model looking like before but with the added benefit of 5 partitions each for game and player_game.

But wait...

<pre class="brush:sql;">ALTER TABLE player_game ADD CONSTRAINT player_game_fk01 FOREIGN KEY (game_id) REFERENCES game (game_id);

ERROR 1005 (HY000): Can't create table 'parttest.#sql-52b_3e' (errno: 150)</pre>

Again â€“ argh! What is wrong now? Going back to the limitations link from the last error gives us the answer: partitioned tables can't have foreign keys. Yep, you heard me correctly â€“ <strong>partitioned tables can't </strong><strong>be involved in any</strong><strong> foreign keys. </strong>Really, who needs referential integrity anyway? Just kidding, as this <em>really</em> <em>big </em>limitation in my opinion.

Seeing as we've already dropped the foreign keys of the player_game table to get to this point, we don't have anything further to do. To get where we are we had to remove the foreign keys from the tables that we'd be partitioning, and we had to move the column we were partitioning on into the primary key.
<h3>My recommendations</h3>
What does all this mean in terms of how to design your tables now, when they aren't in a partitioned state? Here's my recommendations based on what I've seen with partitioning thus far:
<ul>
	<li>Build the column you will 	be partitioning on in to 	the primary key from the get-go. Make 	sure the ordering of the primary key (if you will have multiple 	columns at all) makes sense for your query load on the table. Put 	the columns most used in WHERE clauses first.</li>
	<li>As an alternative to the 	above you can keep your primary key the same but add 	a unique key including all the columns of the primary key plus the 	column you'll partition on. This will help you avoid duplicate 	entries when you want to bring the partitioning column into the 	primary key, but you'll have a few additional steps later (dropping 	and recreate the primary key).</li>
	<li>Keep the foreign keys in 	the database in place as 	long as you can while it is still available, but plan ahead in the 	application by coding as if they weren't there. 	When the time comes to 	partition you can then be confident that all the data up to that 	point is clean in terms of its referential integrity. You'll also 	have debugged your application to flush out the errors by that time 	(hopefully).</li>
</ul>
So those are my recommendations for dealing with MySQL 5.5's partitioning. Obviously I think they can do a lot better with their implementation. Ideally I'd like to have the ability to alter the table and add the partitions regardless of its referential integrity or primary keys. The fact that I have to sacrifice the integrity of the database tables (one of the key strong points of having a relational database in the first place) makes me very hesitant to use it at all.
<h3>Some Caveats</h3>
I'm an Oracle DBA, so take this advice with a grain of salt. The stuff in this post is just one solution to the â€œbig dataâ€ problem. Furthermore this is just how I would handle a partitioning situation given the example provided. I'd love to hear some people with more experience chime in on what they do in similar situations.
]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.antzucaro.com</uri>
    </author>
    <title type="html"><![CDATA[Backing up the Acer Revo 3700]]></title>
    <link rel="alternate" type="text/html" href="http://www.antzucaro.com/2011/01/backing-up-the-acer-revo-3700/" />
    <id>http://www.antzucaro.com/2011/01/backing-up-the-acer-revo-3700/</id>
    <updated>2011-01-23T21:41:52Z</updated>
    <published>2011-01-23T21:41:52Z</published>
    <category scheme="http://www.antzucaro.com" term="blog" />
    <category scheme="http://www.antzucaro.com" term="geekery" />
    <summary type="html"><![CDATA[Backing up the Acer Revo 3700]]></summary>
    <content type="html" xml:base="http://www.antzucaro.com/2011/01/backing-up-the-acer-revo-3700/"><![CDATA[<p>In my previous post I told you about my Acer Aspire Revo 3700 - awesome things come in small packages! Unfortunately, as great as the overall package is the default operating system included was Windows 7. That's a definite no-go, as I'm not a fan of anything coming out of Microsoft. Obviously that had to go! Being the practical person I am, I didn't want to blow the Windows software <em>completely</em> away. I wanted to keep a backup copy "just in case." What case, you ask? <em>I don't really know, but I like to keep my options open anyway. </em>Here's how I did it.</p>
<p>Normally I'd just fire up my handy copy of <a href="http://www.sysresccd.org/Main_Page">SystemRescueCD</a> to do the backup, but the Revo 3700 doesn't have a CD drive. Bummer. I'd have to boot from a USB image instead. On first glance SystemRescueCD's USB disk creation process seemed like too much work, so I looked for another Linux distribution that might work better. After a small bit of research I ended up settling on <a href="http://grml.org/">grml</a>, which is a Debian-based distribution intended for textmode-savvy users. I followed the instructions I found on their <a href="http://grml.org/download/">download</a> page to install the disk image onto my 2GB USB drive:</p>
<pre class="brush:bash;">dd if=grml_2010.12.iso of=/dev/sdb</pre>

<p>Be careful with that "of=" line if you do this - your USB <em>might not be /dev/sdb</em>! I only have one hard disk on my laptop, so my thumb drives always show up as /dev/sdb when I plug them in. You can verify which letter your thumb drive is by running "dmesg" in your terminal just after you insert the drive. You should see something like this, the bottom of which will tell you the drive identifier of your USB:</p>
<pre class="brush:bash;">
ant@longstreet:~% dmesg
...
[lots of lines snipped]
...
[16937.696105] usb 1-3: new high speed USB device using ehci_hcd and address 2
[16938.005504] Initializing USB Mass Storage driver...
[16938.005646] scsi2 : usb-storage 1-3:1.0
[16938.005760] usbcore: registered new interface driver usb-storage
[16938.005762] USB Mass Storage support registered.
[16939.005085] scsi 2:0:0:0: Direct-Access     PNY      USB 2.0 FD       8.02 PQ: 0 ANSI: 0 CCS
[16939.006616] sd 2:0:0:0: Attached scsi generic sg2 type 0
[16939.007781] sd 2:0:0:0: [sdb] 15695871 512-byte logical blocks: (8.03 GB/7.48 GiB)
[16939.008264] sd 2:0:0:0: [sdb] Write Protect is off
[16939.008273] sd 2:0:0:0: [sdb] Mode Sense: 45 00 00 08
[16939.008280] sd 2:0:0:0: [sdb] Assuming drive cache: write through
[16939.012131] sd 2:0:0:0: [sdb] Assuming drive cache: write through
[16939.012145]  sdb: sdb1
[16939.015272] sd 2:0:0:0: [sdb] Assuming drive cache: write through
[16939.015282] sd 2:0:0:0: [sdb] Attached SCSI removable disk
</pre>

<p>Now back to the backup process. After my dd command finished, I popped my newly-created disk into my Revo. I hit f12 during boot to tell it to boot from USB and I was quickly in business. Speaking of business, my first order was to mount the device on which I would store the backup itself. In my case I was using a USB external hard drive that I mounted with the following command (using the same "dmesg" trick I mentioned above):</p>
<pre class="brush:bash;">mount /dev/sdb1 /media/backup</pre>

<p>My next task was to back up my partition table. In the event that I had to restore what I was about to back up I would need to know how it was physically laid out. I ran the following to save that sweet, sweet partition table:</p>
<pre class="brush:bash;">ï»¿ï»¿sfdisk -d /dev/sda &gt; /media/backup/revo_parttable.bak</pre>

<p>My next step was to mount the media needing to be backed up. There were three partitions on the stock Revo image, so I created a mount directory for each partition. Keeping things simple I just named these directories after the partitions themselves (being the simple man I am):</p>
<pre class="brush:bash;">for i in 1 2 3
do
mkdir -p /media/sda${i}
mount /dev/sda${i} /media/sda${i}
done</pre>

<p>Having those partitions mounted, next up was backing up the actual data. For this task I used my favorite backup utility DAR (For Disk ARchive). DAR is awesome - really, it deserves its own post (which I am now writing down on my TODO list)! For now, though, I'll just list the commands I used:</p>
<pre class="brush:bash;">dar  -R /media/sda1 --gzip 1 -s 2G -c /media/backup/revo_sda1_201001
dar  -R /media/sda2 --gzip 1 -s 2G -c /media/backup/revo_sda2_201001
dar  -R /media/sda3 --gzip 1 -s 2G -c /media/backup/revo_sda3_201001</pre>

<p>Okay, okay. I'll at least give you a breakdown of those command line switches even if I can't get to talking about DAR in depth (who knows if I will, right?).
<ul>
    <li>-R defines the source of your backup. In this case I've mounted each one of the Revo's partitions to a similarly named mount point. Each of those mount points gets backed up.</li>
    <li>--gzip 1 tells DAR to compress the backup using the gzip algorithm. You can specify the level of compression (from 1 to 10, with 10 yielding the smallest image). Here I've used the lowest level of gzip compression.</li>
    <li>-s splits the backup into pieces (slices). I've specified 2GB slices, meaning when the current backup slice reaches 2GB it will start working on a new slice with a different name (it appends an incrementing number to the filename before the suffix).</li>
    <li>-c is the name of the actual backup. It is called a "basename" because the different slices will take on the incrementing number I mentioned above.</li>
</ul>
After those dar commands ran above I was left with the following in my backup directory (I mounted this on my laptop, thus /media/usb and not /media/backup). Sweet!</p>
<pre class="brush:bash;">
ant@longstreet:~% ls -lthrg /media/usb/*dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:01 /media/usb/revo_sda1_201001.1.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:08 /media/usb/revo_sda1_201001.2.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:14 /media/usb/revo_sda1_201001.3.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:20 /media/usb/revo_sda1_201001.4.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:26 /media/usb/revo_sda1_201001.5.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:33 /media/usb/revo_sda1_201001.6.dar
-rwxrwxrwx 1 root 420M 2011-01-08 08:34 /media/usb/revo_sda1_201001.7.dar
-rwxrwxrwx 1 root 8.2M 2011-01-08 08:34 /media/usb/revo_sda2_201001.1.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:43 /media/usb/revo_sda3_201001.1.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:50 /media/usb/revo_sda3_201001.2.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 08:57 /media/usb/revo_sda3_201001.3.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 09:06 /media/usb/revo_sda3_201001.4.dar
-rwxrwxrwx 1 root 2.0G 2011-01-08 09:15 /media/usb/revo_sda3_201001.5.dar
</pre>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.antzucaro.com</uri>
    </author>
    <title type="html"><![CDATA[Acer Aspire Revo 3700 - unboxing]]></title>
    <link rel="alternate" type="text/html" href="http://www.antzucaro.com/2011/01/acer-aspire-revo-3700-unboxing/" />
    <id>http://www.antzucaro.com/2011/01/acer-aspire-revo-3700-unboxing/</id>
    <updated>2011-01-09T10:32:57Z</updated>
    <published>2011-01-09T10:32:57Z</published>
    <category scheme="http://www.antzucaro.com" term="blog" />
    <category scheme="http://www.antzucaro.com" term="geekery" />
    <summary type="html"><![CDATA[Acer Aspire Revo 3700 - unboxing]]></summary>
    <content type="html" xml:base="http://www.antzucaro.com/2011/01/acer-aspire-revo-3700-unboxing/"><![CDATA[<p>My old HTPC is something that I call a "frankencomputer," meaning it's been upgraded in piecemeal fashion after various OEM parts failed over the years. It may look totally new, but inside it is the same limiting, loud hardware that I started off with circa 2003. I needed some new hotness, so I started looking for something with the following criteria:
<ul>
    <li>Small form factor - it had to fit into an entertainment center and <em>look good. </em>I no longer want a huge ATX tower sitting in the middle of an otherwise sexy entertainment center.</li>
    <li>HD video and audio - it needed to be powerful enough to play 1080p video and decent audio (preferably SPDIF out). The old HTPC could barely play Hulu flash videos on low quality without coughing.</li>
    <li>Low noise - the old machine sounded like an airplane during takeoff, which is to say <em>not good</em>. Any new machine must be quiet enough so that I don't hear it when something is playing on it.</li>
    <li>Wireless AND wired - I wanted the possibility to wire a new machine to the network as well as the freedom to connect wirelessly should I want to go that route.</li>
</ul>
After a thorough search of Newegg and Amazon I settled on the <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16883103297">Acer Aspire Revo 3700</a>. It met all of my criteria above with ease (thanks to an nvidia ION graphics processor) and was only $349. Plus, it came with a bluetooth keyboard and mouse - nice! I ordered it last Monday evening and it was on my kitchen table on Thursday:
<p style="text-align: center;"></p></p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_001.jpg"><img class="size-full wp-image-582" title="Revo inside!" src="http://media.antzucaro.com/uploads/2011/01/Revo_001.jpg" alt="Revo inside!" width="700" height="525" /></a><p class="wp-caption-text">Revo inside!</p></div>

<p>The box felt very solid, and after opening I knew why - the Revo box itself fills the majority of the Newegg box. Only two airbags were used to fill that empty space:
<p style="text-align: center;"></p></p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_002.jpg"><img class="size-full wp-image-583" title="Hello goodness" src="http://media.antzucaro.com/uploads/2011/01/Revo_002.jpg" alt="Hello goodness" width="700" height="525" /></a><p class="wp-caption-text">Hello goodness</p></div>

<p>After opening up the Revo box itself you can find the keyboard and mouse at the very bottom. I originally thought that I wouldn't be using these, but the small form factor of each of these is making me think twice! Both are smaller than the bluetooth set that I currently use:</p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_003.jpg"><img class="size-full wp-image-584" title="Small keyboard and mouse" src="http://media.antzucaro.com/uploads/2011/01/Revo_003.jpg" alt="Small keyboard and mouse" width="700" height="525" /></a><p class="wp-caption-text">Small keyboard and mouse</p></div>

<p>Here's a look at all the parts laid out on the table. Included with the stuff already mentioned is a laptop-like AC adapter, TV mount, vertical stand, some manuals, and of course the box itself. Yes, I was drooling:</p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_004.jpg"><img class="size-full wp-image-585" title="All of it splayed out" src="http://media.antzucaro.com/uploads/2011/01/Revo_004.jpg" alt="All of it splayed out" width="700" height="525" /></a><p class="wp-caption-text">All of it splayed out</p></div>

<p>The machine itself has a luster to it. It is dark blue. Here you can see the front of it - it has the SPDIF out, a card reader, and audio ports. On the bottom left you can see a small cleft where the power button is:</p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_005.jpg"><img class="size-full wp-image-586" title="Revo Front" src="http://media.antzucaro.com/uploads/2011/01/Revo_005.jpg" alt="Revo Front" width="700" height="525" /></a><p class="wp-caption-text">Revo Front</p></div>

<p>Turning it around 90 degrees you can see a USB on the top front and the plug for another USB nearby. The top also has vents for the super-quiet fan:</p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_006.jpg"><img class="size-full wp-image-587" title="Revo Top" src="http://media.antzucaro.com/uploads/2011/01/Revo_006.jpg" alt="Revo Top" width="700" height="525" /></a><p class="wp-caption-text">Revo Top</p></div>

<p>Here's where you see where all the magic happens. The back has all of the other USB ports, HDMI/VGA out, the ethernet port, and the AC adapter input:</p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_007.jpg"><img class="size-full wp-image-589" title="Revo Back" src="http://media.antzucaro.com/uploads/2011/01/Revo_007.jpg" alt="Revo Back" width="700" height="525" /></a><p class="wp-caption-text">Revo Back</p></div>

<p>On the bottom you can find some more vents and the slot for the base (which comes with it):</p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_008.jpg"><img class="size-full wp-image-590" title="Revo Bottom" src="http://media.antzucaro.com/uploads/2011/01/Revo_008.jpg" alt="Revo Bottom" width="700" height="525" /></a><p class="wp-caption-text">Revo Bottom</p></div>

<p>Here is what it looks like with the stand on it. Sexy, no?</p>
<div class="wp-caption aligncenter" style="width: 700px"><a href="http://media.antzucaro.com/uploads/2011/01/Revo_009.jpg"><img class="size-full wp-image-591" title="All grown up!" src="http://media.antzucaro.com/uploads/2011/01/Revo_009.jpg" alt="All grown up!" width="700" height="525" /></a><p class="wp-caption-text">All grown up!</p></div>

<p>In my next post I'll go over what I did to backup the original software on the machine in order to prep it for Linux installation. Being that I'm a Linux geek (and seeing that Windows 7 button) you knew I wasn't going to settle with the basic software on it, right?</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.antzucaro.com</uri>
    </author>
    <title type="html"><![CDATA[Creating Playlists for my MP3 Collection]]></title>
    <link rel="alternate" type="text/html" href="http://www.antzucaro.com/2010/11/creating-playlists-for-my-mp3-collection/" />
    <id>http://www.antzucaro.com/2010/11/creating-playlists-for-my-mp3-collection/</id>
    <updated>2010-11-07T11:26:13Z</updated>
    <published>2010-11-07T11:26:13Z</published>
    <category scheme="http://www.antzucaro.com" term="blog" />
    <category scheme="http://www.antzucaro.com" term="geekery" />
    <summary type="html"><![CDATA[Creating Playlists for my MP3 Collection]]></summary>
    <content type="html" xml:base="http://www.antzucaro.com/2010/11/creating-playlists-for-my-mp3-collection/"><![CDATA[<p>As I've mentioned <a href="http://www.antzucaro.com/2010/11/abcde-a-better-cd-encoder/">before</a>, about two summers back I went through my whole CD collection and digitized it to MP3 format using a tool called ABCDE. What I didn't mention in that post was that at the time I'd forgotten to create playlists automatically during the process. Bummer! I had all of these albums digitized, but whenever I wanted to play a particular album I'd have to add the folder through my music player or manually select all of the files to add to my playlist. That wasn't too bad, but if you've had any experience with playlists in Windows Media Player, VLC, or even XMMS you'll know that in practice it is just a pain to handle. For whatever reason it may be, the ordering of the album tracks on the playlist <em><strong>always</strong></em> gets messed up when adding manually or via folders. <em><strong>Always!</strong></em> Now, I know I can fix this simply by sorting by the ID3 metadata (click the "track number" column in most players to sort), but the point is that <em>I shouldn't have to do this</em>. I wanted a simple solution.</p>
<p>I get annoyed with these things pretty quickly, so I started thinking about how I could remedy the situation to save myself some time. Obviously I could investigate <em>why </em>each of the players were failing to sort my properly named (and usually tagged) files, but that seemed like too much work. I thought a simple solution would be to create M3U (a <a href="http://www.google.com/url?sa=t&amp;source=web&amp;cd=1&amp;ved=0CBwQFjAA&amp;url=http%3A%2F%2Fen.wikipedia.org%2Fwiki%2FM3U&amp;rct=j&amp;q=m3u&amp;ei=sMnWTOWRFMP-8AaXnPmZBg&amp;usg=AFQjCNHVxaaNTKNnCiADQmd33edsMs0o4A&amp;sig2=OU39DvcsU8FPv3XmFXfiiQ&amp;cad=rja">standard</a> playlist format) playlist files in each album directory that would contain the exact track ordering of that particular album. That way to play an album all I'd need to do was double click on the playlist file and <em>voila!</em> it would play it in the right order. This would also give me the ability to drag and drop multiple albums without having to worry about sort issues with having multiple track 1s (not too much of a problem with today's players, but still).</p>
<p>I did a little research and found a tool to help me write the playlists. It's a Python library called <a href="http://www.google.com/url?sa=t&amp;source=web&amp;cd=1&amp;ved=0CBkQFjAA&amp;url=http%3A%2F%2Fcode.google.com%2Fp%2Fmutagen%2F&amp;rct=j&amp;q=mutagen&amp;ei=FsvWTPb9IoT48AblrMjYDA&amp;usg=AFQjCNHzts_jR6qh9C_NtJi1COJQEfqHWQ&amp;sig2=eoawYstMNOwkQafn61uG1g&amp;cad=rja">mutagen</a>, and it basically allowed me to programmatically read the metadata of Mp3 files to get the following information (among the many other things it can retrieve):
<ul>
    <li>Track number</li>
    <li>Artist name</li>
    <li>Album name</li>
    <li>Track length (seconds)</li>
</ul>
After installing mutagen, I wrote the following Python script (m3u.py) to traverse through a set of directories and create playlist files at the lowest level. For example, if I ran it on <em>/home/ant/Music/Coldplay/Parachutes</em> I would end up with a playlist file inside the <em>Parachutes</em> directory:</p>
<p>[python]</p>
<h1>!/usr/bin/python</h1>
<p>import os
import sys
import glob
from mutagen.mp3 import MP3
from mutagen.easyid3 import EasyID3</p>
<p>def makem3u(dir=&quot;.&quot;):
    try:
        print &quot;Processing directory '%s'.&quot; % dir
        os.chdir(dir)</p>
<pre><code>    # get ID3 meta objects for each mp3,
    # store in a list
    playlist = ''
    mp3s = []
    for file in glob.glob(&amp;quot;*.[mM][pP]3&amp;quot;):
        if playlist == '':
            playlist = EasyID3(file)['album'][0] + '.m3u'
        meta_info = {
            'filename': file,
            'length': int(MP3(file).info.length),
            'tracknumber': EasyID3(file)['tracknumber'][0].split('/')[0],
        }
        mp3s.append(meta_info)

    if len(mp3s) &amp;gt; 0:
        print &amp;quot;Writing playlist %s.&amp;quot; % playlist

        # write the playlist
        of = open(playlist, 'w')
        of.write(&amp;quot;#EXTM3U\n&amp;quot;)

        # sorted by track number
        for mp3 in sorted(mp3s, key=lambda mp3: int(mp3['tracknumber'])):
            of.write(&amp;quot;#EXTINF:%s,%s\n&amp;quot; % (mp3['length'], mp3['filename']))
            of.write(mp3['filename'] + &amp;quot;\n&amp;quot;)

        of.close()

except:
    print &amp;quot;Error when trying to process directory '%s'. Ignoring...&amp;quot; % dir
    print &amp;quot;Text:&amp;quot;, sys.exc_info()[0]
</code></pre>
<p>def main(argv = None):
    if argv is None:
        argv = sys.argv</p>
<pre><code># directories containing music files
dirs = []

if len(sys.argv) == 2 and sys.argv[1] == '-':
# we do not have command line arguments,
# so read from STDIN
   for line in sys.stdin:
       dirs.append(line.strip())
else:
# passed in directories on the command line
    for dir in sys.argv[1:]:
        dirs.append(dir)

# for each directory passed to us, go
# to it and make the M3U out of the
# MP3 files there
for dir in dirs:
    makem3u(dir)

return 0
</code></pre>
<p>if <strong>name</strong> == &quot;<strong>main</strong>&quot;:
    sys.exit(main())
[/python]</p>
<p>You can pass directories two ways this script - as arguments or via standard input. This allows me to do this:</p>
<pre class="brush:bash;">m3u.py /home/ant/Music/Coldplay/Parachutes</pre>

<p>...or if I wanted to do a bunch of directories in bulk:</p>
<pre class="brush:bash;">find /home/ant/Music -type d -links 2 | m3u.py - </pre>

<p>Note that I made only a small attempt to make this script bulletproof. It gives a decent attempt to find the metadata in the MP3 files it finds in the directory, but if it encounters an error thrown by mutagen it dies out with an error message telling me the directory that failed and the exception it hit. Nine times out of ten (in my testing) the script will die because the tag information in the MP3s are malformed, which means that you wouldn't want to create a playlist off of them using that info anyway.</p>
<p>When I ran this script on the 127 albums on my laptop, I only had 12 fail (of course YMMV depending on how your collection is set up). A 90% success rate for me to avoid futzing w/ files in my media player is worth it! Plus, I had fun figuring out and learning something new in the process.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.antzucaro.com</uri>
    </author>
    <title type="html"><![CDATA[ABCDE - A Better CD Encoder]]></title>
    <link rel="alternate" type="text/html" href="http://www.antzucaro.com/2010/11/abcde-a-better-cd-encoder/" />
    <id>http://www.antzucaro.com/2010/11/abcde-a-better-cd-encoder/</id>
    <updated>2010-11-04T11:07:07Z</updated>
    <published>2010-11-04T11:07:07Z</published>
    <category scheme="http://www.antzucaro.com" term="blog" />
    <category scheme="http://www.antzucaro.com" term="geekery" />
    <summary type="html"><![CDATA[ABCDE - A Better CD Encoder]]></summary>
    <content type="html" xml:base="http://www.antzucaro.com/2010/11/abcde-a-better-cd-encoder/"><![CDATA[<p>I'm a big fan of automating things. In almost all aspects of my life you can find an example of me trying to free up some of my time by eliminating the mundane, repeatable steps with some automated process (think auto-billpay and programmable coffee makers). This is even more evident in my computer work - I don't want to be typing in the same commands over and over! For one, all of that typing takes time, and time is something of which I have too little. For two, me having to manually type or click things out each time exposes whatever I'm doing to human error.</p>
<p>In this post I'd like to talk about one example of automation that I've used to save a lot of time: archiving of my CDs to MP3. I did this about two summers back when I was trying to archive my entire collection to an external hard drive I'd just bought (over 300 CDs between myself and my wife). My goal was to rip them all with:
<ul>
    <li>The same level of quality (the highest quality variable bitrate MP3)</li>
    <li>The same folder structure (&lt;Artist&gt;/&lt;Album&gt;/&lt;Artist&gt; - &lt;Track Number&gt; - &lt;Track Name&gt;.mp3)</li>
    <li>Meaningful meta-info (IDv3 tags)</li>
    <li>Playlists in the album folder (M3U files)</li>
</ul>
I started with a program called <a href="http://en.wikipedia.org/wiki/K3b">K3B</a> that was more than adequate in terms of my goals above, but it just took too long. After about 10 CDs I realized that the amount time to rip this way wasn't feasible (even with two CD drives to work with in the tower I was using). To Google I went, eventually finding a neat little program called ABCDE that seemed to fit the bill.
<h2>Enter ABCDE</h2>
<a href="http://code.google.com/p/abcde/">ABCDE</a> is a deceptively simple <a href="http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29">Bash</a> script that packs a whole host of features: Mp3/FLAC/Ogg ripping, playlists, CDDB lookups, and file tagging. What made me choose it over everything else wasn't its feature set per se, but rather that it can be customized and simplified such that you don't have to type out your preferences every time; you essentially set up your preferences in a configuration file <em><strong>once</strong></em>, then forget about them! In the end I had my setup customized so that all I needed to do to rip my CDs was one of the following commands (depending on which drive the CD was loaded, of course):</p>
<pre class="brush:bash;">
ripcd
ripdvd
</pre>

<p>How did I get to that point, you ask? Configuration, of course! Read on...
<h2>Configuring ABCDE</h2>
After you install it (which I won't cover here), ABCDE stores its default configuration in the appropriately named <em>/etc/abcde.conf</em>.  I started off by editing this file to make sure that it did things exactly the way I wanted (see my goals above).  Here's an annotated guide of what I changed in the default setup.
<h3>Allow track padding</h3>
The visual presentation of my music files is important to me. This includes how they are sorted when they are sitting in their respective folders - I wanted them to be in the folder in the same order as they are in the album! By default ABCDE doesn't pad their track numbers (should you put them in the filename), which leads to track number "10" being shown before track number "1" if the track number is the first significant difference to the file names. Padding the track names solves this issue (it makes track 1 appear with "01" in the filename) and provides me a consistent representation in my file browser. To enable this, make this change in your config:</p>
<pre class="brush:bash;">PADTRACKS=y</pre>

<h3>MP3 Encoding Parameters</h3>

<p>To get the highest quality encoding out of ABCDE I have the following LAME option (LAME is what ABCDE uses to create MP3s):</p>
<pre class="brush:bash;">LAMEOPTS=&quot;-b 320&quot;</pre>

<p>Let me say here that encoding parameters are extremely subjective. Some folks want lossless,  while others want huge space savings. What I want is the best possible  quality while staying within the constraints of the MP3 file format. I  do that because I think lossless (FLAC) just takes up too much space. I'm also lazy in that I don't  want to convert to MP3 if I have it archived in a different format. If you are interested in exploring other MP3 options for ABCDE here, check out the <a href="http://wiki.hydrogenaudio.org/index.php?title=LAME">Hydrogenaudio Wiki</a> for a pretty succinct breakdown of the other LAME options.
<h3>Output Location</h3>
When I rip a CD, I want all of the output to go to a common location. That way I know where to look when (not if) things go wrong! Change the following options to specify where you'd like your files to go. Here I'm storing them in my home directory.</p>
<pre class="brush:bash;">OUTPUTDIR=/home/ant
WAVOUTPUTDIR=/home/ant/tmp</pre>

<p>You may want to change up your temporary directory to go to a more <em>temporary</em> location like /tmp. For me I just keep it there.
<h3>Output Format</h3>
Here's where things get fun. Everyone has their own file naming scheme, and rightfully so. They are your files after all, right? I like to have the artist name as a top level directory, followed by the album name in another directory under that. For the actual music files (which get placed in the album folder), I like to - again - put the artist in the name in case I want to copy just those files to a USB drive. Here is the setting to make ABCDE create this structure:</p>
<pre class="brush:bash;">OUTPUTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${ARTISTFILE} - ${TRACKNUM} - ${TRACKFILE}'

VAOUTPUTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${ARTISTFILE} - ${TRACKNUM} - ${TRACKFILE}'</pre>

<p>Note that there are two lines there. The first line is for normal albums with only one artist. The second is for music compilations where you have several different artists on the same CD. This is one area that I wish ABCDE did a little better - ideally I'd like to be able to specify my own "album artist" name instead of having folders for each artist on the CD, but I have another solution for that which I'll cover in another post. For now I'm content with that flaw because I rarely purchase compilations.
<h3>Playlists</h3>
As I said before, I want M3U playlists automatically whenever I rip a CD. This gives me a simple, one-click solution to playing an album without having to mess with bad sorting in whatever music player I'm using at the time (they all seem to mess it up). First, use this option to define the format of the M3U playlist. Here I am saying to create the file with the album as it's name, to be stored in the album directory:</p>
<pre class="brush:bash;">PLAYLISTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${ALBUMFILE}.m3u'

PLAYLISTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${ALBUMFILE}.m3u'

</pre>

<p>Next, you need to tell ABCDE to actually create the playlist when you rip a CD (it doesn't do this by default). Add this to do that:</p>
<pre class="brush:bash;">ACTIONS=cddb,read,encode,tag,move,playlist,clean</pre>

<p>Note that there's a lot of other stuff going on before the playlist generation - that's intended.
<h3>Give Me My Space!</h3>
By default ABCDE converts spaces and forward slashes to underscores. I'm fine with the latter, but having underscore in the filename where a space should be is endlessly annoying to me ("Pink Floyd - 03 - Time.mp3" looks much better than "Pink_Floyd_-<em>03</em>-_Time.mp3," don't you think?). It's 2010 for goodness sake! Computers have evolved to be able to handle spaces in file names! Replace the "mungefilename" function with this one to keep your spaces:</p>
<pre class="brush:bash;">mungefilename ()
{
 echo &quot;$@&quot; | sed s,:,\ -,g | tr /\* _+ | tr -d \'\&quot;\?\[:cntrl:\]
}</pre>

<h3>Setting Up Aliases</h3>

<p>As I mentioned before, when I was using ABCDE heavily two summers ago I had aliases set up for each physical CD drive on my machine. If you don't have two drives, don't worry about this. If you do, and you think you'd get annoyed or tired of typing out which device from which to rip, define these aliases and put them in your ~/.bashrc. You'll want to substitute your actual device names , of course (mine are /dev/dvd and /dev/cdrw):</p>
<pre class="brush:bash;">alias ripcd='abcde -d /dev/cdrw'

alias ripdvd='abcde -d /dev/dvd'</pre>
<h2>All Together Now</h2>
Okay, so now that you have the configuration, let me show you how it looks in practice. Here I've put a CD (Fall Out Boy's worst CD thus far, IMO)  in my CDRW drive and used my alias to start ABCDE. What appears first is the matching CDDB entries:
<p style="text-align: left;"></p>

<div class="wp-caption aligncenter" style="width: 682px"><a href="http://media.antzucaro.com/uploads/2010/11/abcde_1.jpg"><img class="size-full wp-image-418 " title="After executing &quot;ripcd&quot;" src="http://media.antzucaro.com/uploads/2010/11/abcde_1.jpg" alt="After executing &quot;ripcd&quot;" width="682" height="400" /></a><p class="wp-caption-text">After executing &quot;ripcd&quot;</p></div>

<p style="text-align: left;">After reviewing which entry looks like the best fit I choose #2 (mainly because it is listed as "rock" and not "misc"):</p>
<p style="text-align: left;"></p>

<div class="wp-caption aligncenter" style="width: 682px"><a href="http://media.antzucaro.com/uploads/2010/11/abcde_2.jpg"><img class="size-full wp-image-419 " title="Choosing the second entry" src="http://media.antzucaro.com/uploads/2010/11/abcde_2.jpg" alt="Choosing the second entry" width="682" height="400" /></a><p class="wp-caption-text">Choosing the second entry</p></div>

<p style="text-align: left;">I then answer a couple of questions - do I want to edit the CDDB entry (not this time, but you can with your editor of choice) and is this CD multi-artist (no again) - and it starts ripping:</p>
<p style="text-align: center;"></p>

<div class="wp-caption aligncenter" style="width: 682px"><a href="http://media.antzucaro.com/uploads/2010/11/abcde_3.jpg"><img class="size-full wp-image-420 " title="Ripping started" src="http://media.antzucaro.com/uploads/2010/11/abcde_3.jpg" alt="Ripping started" width="682" height="400" /></a><p class="wp-caption-text">Ripping started</p></div>

<p style="text-align: left;">When everything is done ABCDE will happily drop you back to your command prompt. Here I'm inspecting the files created after the rip finished. All looks well!</p>
<p style="text-align: center;"></p>

<div class="wp-caption aligncenter" style="width: 717px"><a href="http://media.antzucaro.com/uploads/2010/11/abcde_4.jpg"><img class="size-full wp-image-421 " title="Rip/encode done!" src="http://media.antzucaro.com/uploads/2010/11/abcde_4.jpg" alt="Rip/encode done!" width="717" height="441" /></a><p class="wp-caption-text">Rip/encode done!</p></div>

<h2>Conclusion</h2>

<p>Well I hope you've enjoyed this visual and textual tour of what I consider to be a great ripping program: ABCDE. I enjoy automating things in my life, and this handy (and simple) script fits the bill nicely!</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.antzucaro.com</uri>
    </author>
    <title type="html"><![CDATA[Xonotic Player Interview: chooksta]]></title>
    <link rel="alternate" type="text/html" href="http://www.antzucaro.com/2010/10/xonotic-player-interview-chooksta/" />
    <id>http://www.antzucaro.com/2010/10/xonotic-player-interview-chooksta/</id>
    <updated>2010-10-23T09:16:06Z</updated>
    <published>2010-10-23T09:16:06Z</published>
    <category scheme="http://www.antzucaro.com" term="blog" />
    <category scheme="http://www.antzucaro.com" term="geekery" />
    <category scheme="http://www.antzucaro.com" term="xonotic" />
    <summary type="html"><![CDATA[Xonotic Player Interview: chooksta]]></summary>
    <content type="html" xml:base="http://www.antzucaro.com/2010/10/xonotic-player-interview-chooksta/"><![CDATA[<p>I am happy to announce the first (of many, hopefully) player interviews, where you can hear players respond to my questions while you watch a sample of their actual gameplay. In this one I talk with chooksta, who is known to all of us in the Xonotic community as both a nice guy and a talented musician. We talk about how he first came to play the game, his music, and what he's looking forward to in Xonotic. The gameplay sample is from a game on "mentalrespace" on an Australian server. I hope you all enjoy!</p>
<p style="text-align: center;"><object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="640" height="385" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.youtube.com/v/XQ8qOVoyHfY?fs=1&amp;hl=en_US" /><param name="allowfullscreen" value="true" /><embed type="application/x-shockwave-flash" width="640" height="385" src="http://www.youtube.com/v/XQ8qOVoyHfY?fs=1&amp;hl=en_US" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://www.antzucaro.com</uri>
    </author>
    <title type="html"><![CDATA[Enabling ClearType on Windows XP Pro]]></title>
    <link rel="alternate" type="text/html" href="http://www.antzucaro.com/2010/10/enabling-cleartype-on-windows-xp-pro/" />
    <id>http://www.antzucaro.com/2010/10/enabling-cleartype-on-windows-xp-pro/</id>
    <updated>2010-10-22T09:57:37Z</updated>
    <published>2010-10-22T09:57:37Z</published>
    <category scheme="http://www.antzucaro.com" term="blog" />
    <category scheme="http://www.antzucaro.com" term="geekery" />
    <summary type="html"><![CDATA[Enabling ClearType on Windows XP Pro]]></summary>
    <content type="html" xml:base="http://www.antzucaro.com/2010/10/enabling-cleartype-on-windows-xp-pro/"><![CDATA[<p>Until recently I hadn't noticed the poor state of affairs in font rendering for XP (at least by default). I began to notice when I was implementing a new font for this website - the site just looked <em>weird </em>when viewed in XP. No matter which browser I tried (IE, Firefox, and Chrome), the body text ended up looking both blocky and blurred at the same time! It was obviously something OS-specific, otherwise  I would have seen different behavior when I switched browsers (or it would look equally horrible in both Linux and Windows), but what was it?</p>
<p>After a small bit of Googling I came up with my answer: ClearType was disabled on my XP machine. What is ClearType, you ask? Well, <a href="http://www.microsoft.com/typography/cleartypeinfo.mspx">Microsoft touts it as</a>:
<blockquote>"...an unprecedented innovation in font display technology                      that dramatically improves font display resolution and marks a genuine                      breakthrough in screen readability"</blockquote>
Well isn't that a mouthful! Here's my explanation: ClearType is a font-prettifier for Windows. What's good is ClearType comes built into XP by default. What's bad is that it is <strong><em>disabled</em></strong> by default. That's not too big of a deal, though. You can get "purdy" fonts with minimal effort by simply enabling ClearType - you're literally a couple of clicks away from making all (okay, not all, but most) of the text on your computer look better.</p>
<p>Notice that I just said "better." Of course "better" is a totally subjective opinion of mine. Feel free to judge for yourself. To assist you in that process, here's a before and after screenshot of one of my blog posts:</p>
<p><a href="http://media.antzucaro.com/uploads/2010/10/before_and_after.png"><img class="aligncenter size-full wp-image-306" title="before_and_after" src="http://media.antzucaro.com/uploads/2010/10/before_and_after.png" alt="" width="908" height="440" /></a>Can you see the difference? Does it matter to you? Do you like the right-hand side better? If you've answered yes to each of these questions, proceed!
<h2>Enabling ClearType</h2>
To enable ClearType, first right click on your desktop to access the context menu there. You've probably seen it dozens of times when changing your desktop background, but here it is. Click on "properties":</p>
<div class="wp-caption aligncenter" style="width: 197px"><a href="http://media.antzucaro.com/uploads/2010/10/1_properties_screen.jpg"><img class="size-full wp-image-313" title="Desktop context menu" src="http://media.antzucaro.com/uploads/2010/10/1_properties_screen.jpg" alt="Desktop context menu" width="197" height="206" /></a><p class="wp-caption-text">Desktop context menu</p></div>

<p>Then go to the "Appearance" tab and click on the "Effects..." button:</p>
<div class="wp-caption aligncenter" style="width: 404px"><a href="http://media.antzucaro.com/uploads/2010/10/2_appearance_tab.jpg"><img class="size-full wp-image-314" title="Appearance tab" src="http://media.antzucaro.com/uploads/2010/10/2_appearance_tab.jpg" alt="Appearance tab" width="404" height="455" /></a><p class="wp-caption-text">Appearance tab</p></div>

<p>Next, in the effects popup, check the box that says "Use the following method to smooth edges of screen fonts" and click the "OK" button:</p>
<div class="wp-caption aligncenter" style="width: 414px"><a href="http://media.antzucaro.com/uploads/2010/10/2_effects_menu.jpg"><img class="size-full wp-image-315" title="Effects menu" src="http://media.antzucaro.com/uploads/2010/10/2_effects_menu.jpg" alt="Effects menu" width="414" height="316" /></a><p class="wp-caption-text">Effects menu</p></div>

<p>Back on the appearance panel, click "OK" or "Apply" to have your setting take effect. Enjoy your smooth font experience! I know I do.</p>]]></content>
  </entry>
</feed>
